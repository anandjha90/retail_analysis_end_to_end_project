/* CUSTOMERS CONTACTED IN MARCH 2022 BY CHANNEL & REGION */
SELECT * FROM "WUDNA"."CEX_SANDBOX"."CAMPAIGN_WISE_EMAIL_SMS_APP_COMMUNICATIONS_1";

SELECT CUSTOMER_KEY,COUNTRY,COUNTRY_NAME,REGION,CHANNEL,CHANNEL_RETAIL_DIGITAL,CHANNEL_WEB_APP,CUSTOMERS_CONTACTED_ATLEAST_ONCE_BY_EMAIL
--COUNT(DISTINCT CUSTOMER_KEY) AS TOTAL_CUSTOMERS_CONTACTED
FROM "WUDNA"."CEX_SANDBOX"."CAMPAIGN_WISE_EMAIL_SMS_APP_COMMUNICATIONS_1"
WHERE DATE_TRUNC('MONTH',EVENT_CAPTURED_DT) = '2022-03-01'
AND CUSTOMERS_CONTACTED_ATLEAST_ONCE_BY_EMAIL > 0;
--GROUP BY 1,2,3,4,5
--ORDER BY 1,2,3,4,5;

/* RETAIL CUSTOMERS CONTACTED IN FEB 2022 BY CHANNEL & REGION */

SELECT REGION,
--COUNTRY,COUNTRY_NAME,REGION,CHANNEL,CHANNEL_RETAIL_DIGITAL,CUSTOMERS_CONTACTED_ATLEAST_ONCE_BY_EMAIL,
COUNT(DISTINCT CUSTOMER_KEY) AS TOTAL_RET_CUSTOMERS_CONTACTED
FROM "WUDNA"."CEX_SANDBOX"."CAMPAIGN_WISE_EMAIL_SMS_APP_COMMUNICATIONS_1"
WHERE DATE_TRUNC('MONTH',EVENT_CAPTURED_DT) = '2022-01-01' 
--OR DATE_TRUNC('MONTH',EVENT_CAPTURED_DT) = '2022-02-01'
AND CUSTOMERS_CONTACTED_ATLEAST_ONCE_BY_EMAIL > 0
AND CHANNEL_RETAIL_DIGITAL = 'RETAIL_ONLY'
GROUP BY 1
ORDER BY 1;


SELECT *  FROM "WUDNA"."SUMMARY_GEN"."SOLICITATION_HISTORY_VW" WHERE PIR_NBR IN ('96524602','97027262','72382862','78050702')
AND RELEASE_2_VENDOR_DATE >= '2021-01-02'AND RELEASE_2_VENDOR_DATE < '2021-08-01'; -- 1,396,897 rows

SELECT COUNT(DISTINCT(CUSTOMER_KEY)) FROM "WUDNA"."SUMMARY_GEN"."SOLICITATION_HISTORY_VW" WHERE PIR_NBR IN  ('96524602','97027262','72382862','78050702')
AND RELEASE_2_VENDOR_DATE >= '2021-01-02'AND RELEASE_2_VENDOR_DATE < '2021-08-01'; -- 816,295 distinct customers

SELECT *  FROM "WUDNA"."SUMMARY_GEN"."SOLICITATION_HISTORY_VW" WHERE PIR_NBR IN ('72382862', '78050702')
AND RELEASE_2_VENDOR_DATE >= '2021-01-02'AND RELEASE_2_VENDOR_DATE < '2021-08-01'; -- 816,169 ROWS

SELECT PIR_NBR,COUNT(DISTINCT(CUSTOMER_KEY)) FROM "WUDNA"."SUMMARY_GEN"."SOLICITATION_HISTORY_VW" WHERE PIR_NBR IN ('72382862', '78050702')
AND RELEASE_2_VENDOR_DATE >= '2021-01-02'AND RELEASE_2_VENDOR_DATE < '2021-08-01'
GROUP BY 1; -- 783,094 distinct customers

SELECT * FROM "WUDNA"."CEX_SANDBOX"."CAMPAIGN_WISE_EMAIL_COMMUNICATIONS_2021"
WHERE CAMPAIGN_ID IN ('72382862', '78050702') AND EVENT_CAPTURED_DT >= '2021-01-02' AND EVENT_CAPTURED_DT  < '2021-08-01'; -- 816,027 ROWS

SELECT COUNT(DISTINCT(CUSTOMER_KEY)) FROM "WUDNA"."CEX_SANDBOX"."CAMPAIGN_WISE_EMAIL_COMMUNICATIONS_2021"
WHERE CAMPAIGN_ID IN ('72382862', '78050702') AND EVENT_CAPTURED_DT >= '2021-01-02' AND EVENT_CAPTURED_DT  < '2021-08-01'; -- 782,966 distinct customers

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DROP TABLE RITM0841098_TABLE;
CREATE TABLE RITM0841098_TABLE AS
SELECT DISTINCT COUNTRY,CUSTOMER_KEY,CARD_NUMBER,'96524602' AS PIR_NBR,
     CASE WHEN ACTIVITY_CODE LIKE 'S%' THEN 'TEST_CUST'
     WHEN ACTIVITY_CODE LIKE 'G%' THEN 'GLOBAL_HOLDOUT'
     WHEN ACTIVITY_CODE LIKE 'C%' THEN 'CAMPAIGN_HOLDOUT'
     ELSE ACTIVITY_CODE
     END AS TEST_GH_CH,
     RELEASE_2_VENDOR_DATE

FROM "WUDNA"."SUMMARY_GEN"."SOLICITATION_HISTORY_VW" 
WHERE PIR_NBR = '96524602'
AND RELEASE_2_VENDOR_DATE >= '2021-01-02'AND RELEASE_2_VENDOR_DATE < '2021-08-01'AND ACTIVITY_CODE IS NOT NULL
UNION
SELECT DISTINCT COUNTRY,CUSTOMER_KEY,CARD_NUMBER,'97027262' AS PIR_NBR,
     CASE WHEN ACTIVITY_CODE LIKE 'S%' THEN 'TEST_CUST'
     WHEN ACTIVITY_CODE LIKE 'G%' THEN 'GLOBAL_HOLDOUT'
     WHEN ACTIVITY_CODE LIKE 'C%' THEN 'CAMPAIGN_HOLDOUT'
     ELSE ACTIVITY_CODE
     END AS TEST_GH_CH,
     RELEASE_2_VENDOR_DATE

FROM "WUDNA"."SUMMARY_GEN"."SOLICITATION_HISTORY_VW" 
WHERE PIR_NBR = '97027262'
AND RELEASE_2_VENDOR_DATE >= '2021-01-02'AND RELEASE_2_VENDOR_DATE < '2021-08-01'AND ACTIVITY_CODE IS NOT NULL
UNION
SELECT DISTINCT COUNTRY,CUSTOMER_KEY,CARD_NUMBER,'72382862' AS PIR_NBR,
     CASE WHEN ACTIVITY_CODE LIKE 'S%' THEN 'TEST_CUST'
     WHEN ACTIVITY_CODE LIKE 'G%' THEN 'GLOBAL_HOLDOUT'
     WHEN ACTIVITY_CODE LIKE 'C%' THEN 'CAMPAIGN_HOLDOUT'
     ELSE ACTIVITY_CODE
     END AS TEST_GH_CH,
     RELEASE_2_VENDOR_DATE

FROM "WUDNA"."SUMMARY_GEN"."SOLICITATION_HISTORY_VW" 
WHERE PIR_NBR = '72382862'
AND RELEASE_2_VENDOR_DATE >= '2021-01-02'AND RELEASE_2_VENDOR_DATE < '2021-08-01'AND ACTIVITY_CODE IS NOT NULL
UNION
SELECT DISTINCT COUNTRY,CUSTOMER_KEY,CARD_NUMBER,'78050702' AS PIR_NBR,
     CASE WHEN ACTIVITY_CODE LIKE 'S%' THEN 'TEST_CUST'
     WHEN ACTIVITY_CODE LIKE 'G%' THEN 'GLOBAL_HOLDOUT'
     WHEN ACTIVITY_CODE LIKE 'C%' THEN 'CAMPAIGN_HOLDOUT'
     ELSE ACTIVITY_CODE
     END AS TEST_GH_CH,
     RELEASE_2_VENDOR_DATE

FROM "WUDNA"."SUMMARY_GEN"."SOLICITATION_HISTORY_VW" 
WHERE PIR_NBR = '78050702'
AND RELEASE_2_VENDOR_DATE >= '2021-01-02'AND RELEASE_2_VENDOR_DATE < '2021-08-01'AND ACTIVITY_CODE IS NOT NULL;


SELECT PIR_NBR,TEST_GH_CH,COUNTRY,COUNT(DISTINCT CUSTOMER_KEY) FROM RITM0841098_TABLE
GROUP BY 1,2,3
ORDER BY 1,2,3;
SELECT DISTINCT COUNTRY,COUNT(DISTINCT CUSTOMER_KEY) FROM RITM0841098_TABLE
GROUP BY 1;
SELECT DISTINCT TEST_GH_CH,COUNT(DISTINCT CUSTOMER_KEY) FROM RITM0841098_TABLE
GROUP BY 1;
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DROP TABLE BASE_CAMPAIGN_CUST01;
CREATE TABLE BASE_CAMPAIGN_CUST01 AS 
SELECT A.COUNTRY AS COUNTRY_CODE,
       A.CUSTOMER_KEY,CARD_NUMBER,
       A.PIR_NBR,
       MAX(A.TEST_GH_CH) AS ACTIVITY_CODE,
       MIN(A.RELEASE_2_VENDOR_DATE) AS POST_START,
       ADD_MONTHS(DATE_TRUNC('MONTH',POST_START),-12) AS PRE_START,
       ADD_MONTHS(DATE_TRUNC('MONTH',POST_START),0) AS PRE_END,
       DATEADD(DAY,'30',POST_START) AS POST_END
   
 FROM  RITM0841098_TABLE A
 GROUP BY 1,2,3,4;
 
DROP TABLE BASE_CAMPAIGN_CUST02;
CREATE TABLE BASE_CAMPAIGN_CUST02 AS 
SELECT A.* 
FROM BASE_CAMPAIGN_CUST01 A
WHERE CUSTOMER_KEY IS NOT NULL;
 
 
 SELECT PIR_NBR,COUNTRY_CODE,PRE_START,PRE_END,POST_START,POST_END,ACTIVITY_CODE,
 COUNT(1),COUNT(DISTINCT CUSTOMER_KEY),COUNT(DISTINCT CARD_NUMBER)
 FROM BASE_CAMPAIGN_CUST02
 GROUP BY 1,2,3,4,5,6,7
 ORDER BY 1,2,3,4,5,6,7;
 
 SELECT DISTINCT PIR_NBR FROM BASE_CAMPAIGN_CUST02;
 
 SELECT DISTINCT ACTIVITY_CODE,COUNT(*) FROM BASE_CAMPAIGN_CUST02 GROUP BY 1; -- GLOBAL_HOLDOUT - 82,436 & TEST_CUST - 1,281,324

 
 SELECT MAX(POST_END) FROM BASE_CAMPAIGN_CUST02; -- 2021-08-27
 --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/*
For following campaigns : 85754842,85756522,85756402 and 85756642 please provide the following filters:
- Test/Global Holdout
- Transactions
- Customers
- Channel
- SubChannel
- People Who Clicked
- People Who Opened Opened Campaign
- People Who Opted Out

Please include information for the next 30-days after launch (April 29th)
*/

SELECT *  FROM "WUDNA"."SUMMARY_GEN"."SOLICITATION_HISTORY_VW" WHERE PIR_NBR IN ('85754842','85756522','85756402','85756642')
AND RELEASE_2_VENDOR_DATE >= '2021-04-29'AND RELEASE_2_VENDOR_DATE < '2021-05-01'; -- 104,807 rows

SELECT PIR_NBR,COUNT(DISTINCT(CUSTOMER_KEY))
FROM "WUDNA"."SUMMARY_GEN"."SOLICITATION_HISTORY_VW" 
WHERE PIR_NBR IN ('85754842','85756522','85756402','85756642')
AND RELEASE_2_VENDOR_DATE >= '2021-04-29'AND RELEASE_2_VENDOR_DATE < '2021-05-01'
GROUP BY 1
ORDER BY 1; -- 104,217 distinct customers
----------------------------------------------------------------BASE TABLE CREATION---------------------------------------------------------------------------------------------------------------------------
DROP TABLE AJ_CAMPAIGN_MEASUREMENT;
CREATE TABLE AJ_CAMPAIGN_MEASUREMENT AS
SELECT CUSTOMER_KEY,CARD_NUMBER,COUNTRY,PIR_NBR,RELEASE_2_VENDOR_DATE,ACTIVITY_CODE,CAMPAIGN_DESC,PROMOTION_CODE,PROMOTION_DESC,
     CASE WHEN ACTIVITY_CODE LIKE 'S%' THEN 'TEST_CUST'
     WHEN ACTIVITY_CODE LIKE 'G%' THEN 'GLOBAL_HOLDOUT'
     WHEN ACTIVITY_CODE LIKE 'C%' THEN 'CAMPAIGN_HOLDOUT'
     ELSE ACTIVITY_CODE
     END AS TEST_GH_CH
FROM "WUDNA"."SUMMARY_GEN"."SOLICITATION_HISTORY_VW" 
WHERE PIR_NBR IN ('85754842','85756522','85756402','85756642')
AND RELEASE_2_VENDOR_DATE >= '2019-09-01'AND RELEASE_2_VENDOR_DATE < '2021-09-01'
AND ACTIVITY_CODE IS NOT NULL;
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DROP TABLE AJ_CAMPAIGN_MEASUREMENT_TXN;
CREATE TABLE AJ_CAMPAIGN_MEASUREMENT_TXN AS
SELECT RECORD_DATETIME,TXN_ID,SNDCUSTOMER_KEY,
        SNDCOUNTRY_CODE,cv1.COUNTRY_NAME AS SND_COUNTRY,
        RCVCOUNTRY_CODE, cv2.COUNTRY_NAME AS RCV_COUNTRY,       
        SNDPRINCIPAL_USD AS PRINCIPAL,         
        TOTAL_CHARGES_USD AS fee,
        NET_FOREIGN_EXCHANGE AS net_fx,
        nvl(fee,0)+nvl(net_fx,0) as REVENUE,
        cv1.REGION,cv1.SUPER_REGION,
        
        
       CASE WHEN (MOBILE_NUMBER_ON_FILE_FLAG = 'Y' AND CONSOLIDATION_FLAG = 'N') THEN 'Y' ELSE 'N' END AS SMS_CONTACTABLE,
       CASE WHEN (EMAIL_ADDRESS_ON_FILE_FLAG = 'Y' AND CONSOLIDATION_FLAG = 'N') THEN 'Y' ELSE 'N' END AS EMAIL_CONTACTABLE,
       CASE WHEN (PHONE_NUMBER_ON_FILE_FLAG = 'Y' AND CONSOLIDATION_FLAG = 'N') THEN 'Y' ELSE 'N' END AS TELE_CONTACTABLE,
       --CASE WHEN (ADDRESS_ID IS NOT NULL AND CONSOLIDATION_FLAG = 'N') THEN 'Y' ELSE 'N' END AS DMAIL_CONTACTABLE,
 
       case when (EMAIL_ADDRESS_ON_FILE_FLAG = 'Y' OR  MOBILE_NUMBER_ON_FILE_FLAG = 'Y' ) then 'Y' else 'N' end as Flag_addressable,
       case when ((EMAIL_ADDRESS_ON_FILE_FLAG = 'Y' and opt_email='I') OR  (MOBILE_NUMBER_ON_FILE_FLAG = 'Y' AND opt_sms = 'I')) and marketing_flag='Y' then 'Y' else 'N' end as Flag_marketable,
       case when email_address_on_file_flag = 'Y' and opt_email = 'I' and marketing_flag='Y' then 'Y' else 'N' end as Email_Marketable,
       case when OPT_SMS = 'I' and mobile_number_on_File_Flag ='Y' and marketing_flag='Y' then 'Y' else 'N' end as SMS_Marketable,
       
       case when flag_marketable='Y' and EMAIL_MARKETABLE='Y' and SMS_MARKETABLE='Y' then 'EMAIL AND SMS'
            when flag_marketable='Y' and EMAIL_MARKETABLE='Y' and SMS_MARKETABLE='N' then 'EMAIL ONLY'
            when flag_marketable='Y' and EMAIL_MARKETABLE='N' and SMS_MARKETABLE='Y' then 'SMS ONLY'
            else 'NEITHER EMAIL NOR SMS'
            end AS MARKETABILITY_STATUS,
      
       OPT_SMS,OPT_EMAIL,OPT_PHONE,OPT_DMAIL,PRIMARY_CHANNEL,PRICING_CHANNEL,DIRECTION,LOYALTY_MEMBER_FLAG,REGISTERED_CUSTOMER_FLAG,MARKETING_FLAG,
         
       CASE WHEN (PRICING_CHANNEL IN ('POS','TMT','AIR')) THEN 'RETAIL'  
            WHEN (PRICING_CHANNEL IN  ('WEB','APP')) THEN 'DIGITAL'
            ELSE 'OTHERS'
            END AS CHANNEL_TYPE,
            
            
       CASE WHEN (RECORD_DATETIME >= '2020-10-01' AND RECORD_DATETIME < '2021-10-01') THEN 'R12 PERIOD'
            WHEN (RECORD_DATETIME >= '2019-10-01' AND RECORD_DATETIME < '2020-10-01') THEN 'R13-R24/PR12 PERIOD'
            WHEN (RECORD_DATETIME >= '2018-10-01' AND RECORD_DATETIME < '2019-10-01') THEN 'R25-R36/PPR12 PERIOD'
            END AS TXN_PERIOD,
 
      FUNDS_IN,FUNDS_OUT,PAY_IN_METHOD,PAYOUT_METHOD,txn.NETWORK_CODE,txn.SUB_NETWORK_CODE,txn.NETWORK_CODE || txn.SUB_NETWORK_CODE  AS NAID,txn.AGENT_NETWORK,txn.SNDAGENT_NUMBER
       
from  "WUDNA"."SUMMARY_GEN"."TXN_MASTER_SUPPLEMENT_VW" txn
left outer join  "WUDNA"."SUMMARY_GEN"."CUSTOMER_MASTER_VW" cmv on txn.SNDCUSTOMER_KEY = cmv.CUSTOMER_KEY
left outer join "WUDNA"."SUMMARY_GEN"."COUNTRY_VW" cv1 on txn.sndcountry_code = cv1.country_code
left outer join "WUDNA"."SUMMARY_GEN"."COUNTRY_VW" cv2 on txn.rcvcountry_code = cv2.country_code
left outer join "WUDNA"."SUMMARY_GEN"."AGENT_SUMMARY_VW" ag on txn.SNDAGENT_NUMBER = ag.AGENT_NUMBER
where txn.sub_channel not in ('DIGITAL PARTNERS DWL')
AND txn.COMPANY_BRAND = 'WU'
and txn.valid_txn_type_code='Y'  and txn.SNDAGENT_NUMBER <> 'AKC879730' AND txn.RCVAGENT_NUMBER <> 'AXX100000' 
AND NVL(cmv.CONSOLIDATION_FLAG, 'nll')='N'  
and NVL(txn.PRODUCT_GROUP, 'nll') NOT IN ('QCOL', 'QCSH')
AND txn.RECORD_DATETIME >= '2018-10-01'AND txn.RECORD_DATETIME < '2021-10-01' 
AND SNDPRINCIPAL_USD > 0;

SELECT * FROM AJ_CAMPAIGN_MEASUREMENT_TXN;

---- ROLLING MONTH CODE--------
select c.*,a.* from
"WUDNA"."CEX_SANDBOX"."TXN_MASTER_SUPPLEMENT_1" c
,  (select distinct date_trunc('MONTH',record_datetime) as mth_yr from "WUDNA"."CEX_SANDBOX"."TXN_MASTER_SUPPLEMENT_1") a
where   date_trunc('MONTH',record_datetime) <= a.mth_yr and date_trunc('MONTH',record_datetime) > add_months(a.mth_yr,-12) ;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DROP TABLE AJ_RITM0924427_TXN_R12;
CREATE OR REPLACE TABLE AJ_RITM0924427_TXN_R12 AS 
SELECT MONTH,ROLLING_MONTH,SNDCUSTOMER_KEY,COUNTRY_CODE,
LOYALTY_MEMBER_FLAG,FLAG_MARKETABLE,EMAIL_MARKETABLE,SMS_MARKETABLE,
RETAIL_DIGITAL_FLAG,WEB_APP_FLAG,REDEEMER_TYPE,
R12_REDEEMER_TYPE,R12_RETAIL_DIGITAL_FLAG,R12_WEB_APP_FLAG,R12_NEW_EXISTING,
TOTAL_REDEMPTION_COUNT,TXN_CNT,PRINCIPAL_USD,FEE,NET_FX,REVENUE_USD
FROM AS_REDEEMER_FINAL_MONTHLY_ROLLING
WHERE PRINCIPAL_USD > 0
AND COUNTRY_CODE IN ('AU','NZ','SG','MY','HK','PH','TH','BN','JP','KH','FJ');

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-----R1 New Customers (customers transacting in particular month but not seen before)
--R1 new
select * from wudna.cex_sandbox.YN_cust_level_flags_counts
where r1_txns > 0 and R2_TO_R13_TXNS=0 and R14_TO_R25_TXNS=0 and R26_TO_R37_TXNS=0;

SELECT DISTINCT R12_ACTIVE_BREAKUP,NEW_EXISTING_FLAG FROM wudna.cex_sandbox.YN_cust_level_flags_counts;

--R12 new
select * from wudna.cex_sandbox.YN_cust_level_flags_counts
where r12_txns > 0 and pr12_txns=0 and ppr12_txns=0 ;

grant select on YN_cust_level_flags_counts to public;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DROP TABLE AJ_CAMPAIGN_MEASUREMENT_COMBINED;
CREATE TABLE AJ_CAMPAIGN_MEASUREMENT_COMBINED AS 
SELECT A.*,B.*
    FROM AJ_CAMPAIGN_MEASUREMENT A
    LEFT JOIN AJ_CAMPAIGN_MEASUREMENT_TXN B
    ON A.CUSTOMER_KEY = B.SNDCUSTOMER_KEY;
 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   
SELECT *  FROM AJ_CAMPAIGN_MEASUREMENT_COMBINED;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--NEW/EXISTING CUSTOMERS BY ARKADEEP

DROP TABLE AJ_CAMPAIGN_MEASUREMENT_COMBINED_NEW_EXISTING;
CREATE TABLE AJ_CAMPAIGN_MEASUREMENT_COMBINED_NEW_EXISTING AS
(SELECT SNDCUSTOMER_KEY,MAX(RECORD_DATETIME) AS LATEST_ACTIVE_DATE,
CASE WHEN LATEST_ACTIVE_DATE >= '2020-09-01' AND LATEST_ACTIVE_DATE < '2021-09-01' THEN 'R12_ACTIVE'
     WHEN LATEST_ACTIVE_DATE >= '2019-09-01' AND LATEST_ACTIVE_DATE < '2020-09-01' THEN 'R13_24_ACTIVE'
     END AS LATEST_ACTIVITY_PERIOD
FROM AJ_CAMPAIGN_MEASUREMENT_TXN GROUP BY 1)
UNION
(SELECT CUSTOMER_KEY,NULL AS LATEST_ACTIVE_DATE ,'NEW/PREVIOUSLY EXPIRED' AS LATEST_ACTIVITY_PERIOD
 FROM
(SELECT DISTINCT CUSTOMER_KEY FROM
(SELECT DISTINCT CUSTOMER_KEY FROM 
"WUDNA"."SUMMARY_GEN"."SOLICITATION_HISTORY_VW"
WHERE PIR_NBR in ('97368842','98686462','97368502','98686342'))
WHERE CUSTOMER_KEY NOT IN (SELECT DISTINCT SNDCUSTOMER_KEY FROM AJ_CAMPAIGN_MEASUREMENT_TXN)));

SELECT DISTINCT SNDCUSTOMER_KEY FROM AJ_CAMPAIGN_MEASUREMENT_COMBINED_NEW_EXISTING; --37,337 CUSTOMERS

SELECT LATEST_ACTIVITY_PERIOD,COUNT(DISTINCT SNDCUSTOMER_KEY) 
FROM AJ_CAMPAIGN_MEASUREMENT_COMBINED_NEW_EXISTING
GROUP BY 1
ORDER BY 1;

------- --NEW/EXISTING CUSTOMERS BY YOGESWAR
SELECT A.*,CASE WHEN B.SNDCUSTOMER_KEY IS NULL THEN 'NEW' ELSE 'EXISTING' END AS NEW_EXIST_FLAG
     FROM   (SELECT DISTINCT SNDCUSTOMER_KEY,SNDCOUNTRY_CODE,TXN_MONTH
             FROM AJ_RITM0924427_TXN) A
     LEFT OUTER JOIN
            (SELECT DISTINCT SNDCUSTOMER_KEY,SNDCOUNTRY_CODE,TXN_MONTH
             FROM AJ_RITM0924427_TXN) B
      ON A.SNDCUSTOMER_KEY = B.SNDCUSTOMER_KEY AND A.SNDCOUNTRY_CODE = B.SNDCOUNTRY_CODE
      and (B.TXN_MONTH < A.TXN_MONTH AND B.TXN_MONTH >= ADD_MONTHS(A.TXN_MONTH,-12))
      
      
---- TOP 3/4/5/6 LATEST TXNS by each customer---------------------------------------------------
DROP TABLE AJ_RITM0900731_Q3_Q4_2020_TOP3_TXNS ;
CREATE TABLE AJ_RITM0900731_Q3_Q4_2020_TOP3_TXNS AS
SELECT DISTINCT SNDCUSTOMER_KEY,SNDCOUNTRY_CODE,RCVCOUNTRY_CODE,TXN_ID,PRINCIPAL,FEE,NET_FX,REVENUE,QTR_PERIOD,RECORD_DATETIME
FROM (
    SELECT A.*, ROW_NUMBER() OVER (PARTITION BY A.SNDCUSTOMER_KEY ORDER BY RECORD_DATETIME DESC) TOP
    FROM  AJ_RITM0900731_CHANNEL_PAYIN_Q3_Q4_2020 A 
    WHERE RETAIL_DIGITAL_FLAG = 'Retail_only'  
    ) AJ_RITM0900731_CHANNEL_PAYIN_Q3_Q4_2020
where TOP <= 3;     

------OR USE BELOW ONE

DROP TABLE AJ_RITM0900731_Q3_Q4_2020_TOP_TXNS;
CREATE TABLE AJ_RITM0900731_Q3_Q4_2020_TOP_TXNS as
SELECT SNDCUSTOMER_KEY,SNDCOUNTRY_CODE,RCVCOUNTRY_CODE,TXN_ID,PRINCIPAL,FEE,NET_FX,REVENUE,QTR_PERIOD,RECORD_DATETIME,
       ROW_NUMBER() OVER (PARTITION BY SNDCUSTOMER_KEY ORDER BY RECORD_DATETIME DESC) AS TOP_3_TXNS       
       FROM AJ_RITM0900731_CHANNEL_PAYIN_Q3_Q4_2020 
       WHERE RETAIL_DIGITAL_FLAG = 'Retail_only' ; 

//Pick top 3/4/5 transactions
DROP TABLE IF EXISTS AJ_RITM0900731_Q3_Q4_2020_TOP3_TXNS ;
CREATE TABLE AJ_RITM0900731_Q3_Q4_2020_TOP3_TXNS AS
SELECT A.* FROM AJ_RITM0900731_Q3_Q4_2020_TOP_TXNS A
WHERE  TOP_3_TXNS <= 3 ;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- DOMINANT CHANNEL
DROP TABLE AJ_CAMPAIGN_MEASUREMENT_DOMINANT;
CREATE TABLE AJ_CAMPAIGN_MEASUREMENT_DOMINANT AS
SELECT A.*, B.CHANNEL_TYPE AS DOMINANT_CHANNEL FROM
AJ_CAMPAIGN_MEASUREMENT_COMBINED_NEW_EXISTING A
LEFT JOIN
(SELECT
  A.*
FROM
  (
    SELECT
      A.sndcustomer_key,
      A.CHANNEL_TYPE,
      ROW_NUMBER() OVER (PARTITION BY A.sndcustomer_key ORDER BY COUNT(1) DESC,MAX(RECORD_DATETIME) DESC) TOP,
    count(1)
    FROM
 AJ_CAMPAIGN_MEASUREMENT_TXN  A
    GROUP BY
      A.sndcustomer_key,
      A.CHANNEL_TYPE
    ) A
WHERE A.TOP=1
) B ON A.SNDCUSTOMER_KEY = B.SNDCUSTOMER_KEY;
----------------------------------------------------------------------------------------
SELECT * FROM AJ_CAMPAIGN_MEASUREMENT_DOMINANT;

select * from "WUDNA"."CEX_SANDBOX"."RG_YN_VA_KPI_2020_OUTPUT_ENGAGEMENT";
---CLONING TABLE
create table clone_table_RG_YN_VA_KPI_2020_OUTPUT_ENGAGEMENT clone RG_YN_VA_KPI_2020_OUTPUT_ENGAGEMENT at (timestamp => '2022-07-08 12:00:00'::timestamp);

--------------------------------------------------------------------------------------------------------------------------
-- CHANNEL/SUB-CHANNEL/CUST_LEVEL_FLAGS
DROP TABLE AJ_CAMPAIGN_MEASUREMENT_CHANNEL_PAYIN;
CREATE TABLE AJ_CAMPAIGN_MEASUREMENT_CHANNEL_PAYIN AS
SELECT A.*,B.R12_active_breakup,B.Retail_Digital_flag,B.Web_App_flag,B.PAY_IN
FROM
AJ_CAMPAIGN_MEASUREMENT_DOMINANT A
LEFT JOIN 
( select 
 sndcountry_code,
 sndcustomer_key,

   count(case when TXN_PERIOD = 'R12 PERIOD' then 1 end) as R12_txns,
   count(case when TXN_PERIOD = 'R13-R24/PR12 PERIOD' then 1 end) as PR12_txns,
   count(case when TXN_PERIOD = 'R25-R36/PPR12 PERIOD'  then 1 end) as PPR12_txns,  
    
    case
 
        when r12_txns > 0 and pr12_txns=0 and ppr12_txns=0 then 'NEW'
        when r12_txns > 0 and pr12_txns>0 and ppr12_txns=0 then 'RETAINED'
        when r12_txns > 0 and pr12_txns=0 and ppr12_txns>0 then 'WINBACKS'
        end R12_active_breakup,
 
    count(case when TXN_PERIOD = 'R12 PERIOD' and pricing_channel in ('AIR') then 1 end) as R12_AIR_txns,
    count(case when TXN_PERIOD = 'R12 PERIOD' and pricing_channel in ('POS','AIR','TMT') then 1 end) as R12_Retail_txns,
    count(case when TXN_PERIOD = 'R12 PERIOD' and pricing_channel ='WEB' then 1 end) as R12_website_txns,
    count(case when TXN_PERIOD = 'R12 PERIOD' and pricing_channel ='APP' then 1 end) as R12_App_txns,
    count(case when TXN_PERIOD = 'R12 PERIOD' and pricing_channel in ('POS') then 1 end) as R12_POS_txns,

    case 
 
        when R12_Retail_txns > 0 and (R12_website_txns > 0 or R12_App_txns > 0 ) then 'Retail+Digital'
        when R12_Retail_txns > 0 and (R12_website_txns = 0 and R12_App_txns = 0 ) then 'Retail_only'
        when R12_Retail_txns = 0 and (R12_website_txns > 0 or R12_App_txns > 0 ) then 'Digital_only'
        when R12_Retail_txns = 0 and (R12_website_txns = 0 and R12_App_txns = 0 ) then 'R12_Inactive'
        end Retail_Digital_flag,

    case 
        when  R12_website_txns > 0 and R12_App_txns > 0 then 'Website+App'
        when  R12_website_txns > 0 and R12_App_txns = 0 then 'Website_Only'
        when  R12_website_txns = 0 and R12_App_txns > 0 then 'App_Only'
        else Retail_Digital_flag end Web_App_flag,
 
    COUNT(CASE WHEN PAY_IN_METHOD IN ('BANK ACCOUNT','MOBILE','CREDIT CARD/DEBIT CARD') THEN 1 END ) AS NON_CASH_PAY_IN_COUNT,
    COUNT(CASE WHEN PAY_IN_METHOD IN ('CASH') THEN 1 END) AS  CASH_PAY_IN_COUNT,
 
    CASE 
        WHEN NON_CASH_PAY_IN_COUNT = 0 AND CASH_PAY_IN_COUNT>0 THEN 'CASH ONLY'
        WHEN NON_CASH_PAY_IN_COUNT > 0 AND CASH_PAY_IN_COUNT=0 THEN 'NON-CASH ONLY'
        WHEN NON_CASH_PAY_IN_COUNT > 0 AND CASH_PAY_IN_COUNT>0 THEN 'BOTH CASH AND NON-CASH'
        END AS PAY_IN
 
   
FROM AJ_CAMPAIGN_MEASUREMENT_TXN 
GROUP BY 1,2) B ON A.SNDCUSTOMER_KEY=B.SNDCUSTOMER_KEY;
-------------------------------------------------------------------------------------------------------------------------------------------------------------
SELECT  DISTINCT(Web_App_flag) FROM AJ_CAMPAIGN_MEASUREMENT_CHANNEL_PAYIN;
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table dominant_channel_this_month;
create table dominant_channel_this_month as 
SELECT
  A.*
FROM
  (
    SELECT
      A.sndcustomer_key,
      a.mth_yr,
      A.channel_v1,
      ROW_NUMBER() OVER (PARTITION BY A.sndcustomer_key,a.mth_yr ORDER BY COUNT(1) DESC,MAX(RECORD_DATETIME) DESC) TOP
    FROM
      
  (
        select a.*,
  case 
  when pricing_channel in ('POS','TMT','AIR') then 'RETAIL'
  when pricing_channel='APP'  then 'APP'
  when pricing_channel='WEB'  then 'WEBSITE'
  else 'OTHERS' end channel_v1
  from kpi_2020_3 A )  A
    GROUP BY
      A.sndcustomer_key,
      a.mth_yr,
      A.channel_v1
    ) A
WHERE A.TOP=1
;

---------------------------------------------------------------------------------------------------------------------------------------------------------------
DROP TABLE  AJ_CAMPAIGN_MEASUREMENT_CORRIDOR;
CREATE TABLE AJ_CAMPAIGN_MEASUREMENT_CORRIDOR AS
SELECT A.*,B.DOMINANT_CORRIDOR,B.CORRIDOR_TYPE
FROM AJ_CAMPAIGN_MEASUREMENT_CHANNEL_PAYIN A
LEFT JOIN
(SELECT
  A.*
FROM
  (
    SELECT
      A.sndcustomer_key,
      A.SNDCOUNTRY_CODE,
      A.RCVCOUNTRY_CODE,
    A.SNDCOUNTRY_CODE||'-'||A.RCVCOUNTRY_CODE AS DOMINANT_CORRIDOR,
    CASE WHEN A.SNDCOUNTRY_CODE=A.RCVCOUNTRY_CODE THEN 'DOMESTIC'
         WHEN A.SNDCOUNTRY_CODE<>A.RCVCOUNTRY_CODE THEN 'INTERNATIONAL'
    END AS CORRIDOR_TYPE,
      ROW_NUMBER() OVER (PARTITION BY A.sndcustomer_key ORDER BY COUNT(1) DESC,MAX(RECORD_DATETIME) DESC) TOP
    ,COUNT(TXN_ID),
    count(1),
    MAX(RECORD_DATETIME)
    FROM
     AJ_CAMPAIGN_MEASUREMENT_TXN A
    GROUP BY 1,2,3,4,5
      --A.sndcustomer_key,
      --A.SNDCOUNTRY_CODE,
      --a.RCVCOUNTRY_CODE
    ) A
WHERE A.TOP=1 
order by 1,4 desc
) B ON A.SNDCUSTOMER_KEY = B.SNDCUSTOMER_KEY;

SELECT * FROM AJ_CAMPAIGN_MEASUREMENT_CORRIDOR LIMIT 1000;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- ACTIVE/LAPSED

DROP TABLE AJ_CAMPAIGN_MEASUREMENT_TXN_ACTIVE_LAPSED;
CREATE TABLE AJ_CAMPAIGN_MEASUREMENT_TXN_ACTIVE_LAPSED AS
(SELECT * FROM AJ_CAMPAIGN_MEASUREMENT_TXN 
WHERE SNDCUSTOMER_KEY IN (SELECT DISTINCT SNDCUSTOMER_KEY FROM AJ_CAMPAIGN_MEASUREMENT_CORRIDOR WHERE LATEST_ACTIVITY_PERIOD = 'R12_ACTIVE')
AND TXN_PERIOD = 'R12 PERIOD')
UNION
(SELECT * FROM AJ_CAMPAIGN_MEASUREMENT_TXN 
WHERE SNDCUSTOMER_KEY IN (SELECT DISTINCT SNDCUSTOMER_KEY FROM AJ_CAMPAIGN_MEASUREMENT_CORRIDOR WHERE LATEST_ACTIVITY_PERIOD = 'R13_24_ACTIVE')
AND TXN_PERIOD = 'R13-R24/PR12 PERIOD');

SELECT * FROM AJ_CAMPAIGN_MEASUREMENT_TXN_ACTIVE_LAPSED LIMIT 1000 ;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
drop table AJ_CAMPAIGN_MEASUREMENT_TXN_BUCKET;
create table AJ_CAMPAIGN_MEASUREMENT_TXN_BUCKET as 
    SELECT A.*,B.TXN_COUNT,B.TXN_BUCKET
    FROM AJ_CAMPAIGN_MEASUREMENT_TXN_ACTIVE_LAPSED A
    LEFT JOIN
    (SELECT SNDCUSTOMER_KEY,COUNT(TXN_ID) AS TXN_COUNT,
            CASE WHEN TXN_COUNT=1 THEN '1)1X'
            WHEN TXN_COUNT>=2 AND TXN_COUNT<6 THEN '2)2X-5X'
            WHEN TXN_COUNT>=6 AND TXN_COUNT<10 THEN '3)6X-9X'
            WHEN TXN_COUNT>=10 THEN '4)10X+'
            END AS TXN_BUCKET
FROM AJ_CAMPAIGN_MEASUREMENT_TXN GROUP BY 1) B
ON A.SNDCUSTOMER_KEY = B.SNDCUSTOMER_KEY;
   
SELECT * FROM AJ_CAMPAIGN_MEASUREMENT_TXN_BUCKET WHERE SNDCUSTOMER_KEY = '1000000000042563203';    
   
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DROP TABLE AJ_CAMPAIGN_MEASUREMENT_CUST_DATA;
CREATE TABLE AJ_CAMPAIGN_MEASUREMENT_CUST_DATA AS
SELECT A.*,B.FINANCIAL_TXN_PERIOD, B.PRINCIPAL AS CUST_PRINCIPAL, B.FEE AS CUST_FEE, B.REVENUE_ AS CUST_REVENUE
FROM AJ_CAMPAIGN_MEASUREMENT_TXN_BUCKET A
LEFT JOIN
(SELECT SNDCUSTOMER_KEY,TN_PERIOD AS FINANCIAL_TXN_PERIOD,
SUM(PRINCIPAL) AS PRINCIPAL,SUM(FEE) AS FEE, SUM(REVENUE) AS REVENUE_
FROM
AJ_CAMPAIGN_MEASUREMENT_TXN_ACTIVE_LAPSED
GROUP BY 1,2 ORDER BY 1,2) B
ON A.SNDCUSTOMER_KEY = B.SNDCUSTOMER_KEY;

SELECT * FROM AJ_CAMPAIGN_MEASUREMENT_CUST_DATA LIMIT 1000;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DROP TABLE  AJ_CAMPAIGN_MEASUREMENT_EMAIL_CUSTOMERS;
CREATE TABLE AJ_CAMPAIGN_MEASUREMENT_EMAIL_CUSTOMERS AS 
SELECT A.*, B.*
FROM 
(SELECT * FROM "WUDNA"."CEX_SANDBOX"."CAMPAIGN_WISE_EMAIL_SMS_APP_COMMUNICATIONS_1"
WHERE CAMPAIGN_ID IN ('97368842','98686462','97368502','98686342')
) A
LEFT JOIN
AJ_CAMPAIGN_MEASUREMENT_CUST_DATA B
ON A.CUSTOMER_KEY = B.SNDCUSTOMER_KEY;
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

SELECT * FROM AS_RITM0851406_EMAIL_CUSTOMERS;
------------------------------------------------------------------------------FINANCIAL METRICS----------------------------------------------------------------------------
SELECT SNDCOUNTRY_CODE,RCVCOUNTRY_CODE, PRICING_CHANNEL,FUNDS_IN,TEST_GH_CH,DATE_TRUNC('MONTH',RECORD_DATETIME) AS TXN_MONTH,
COUNT(DISTINCT SNDCUSTOMER_KEY) AS TOTAL_CUSTOMERS,
COUNT(TXN_ID) AS TXN_COUNT, SUM(PRINCIPAL) AS TOTAL_PRINCIPAL,SUM(FEE) AS TOTAL_FEE, SUM(NET_FX) AS TOTAL_NET_FX,SUM(REV) AS TOTAL_REVENUE,
(COUNT(TXN_ID)/ COUNT(DISTINCT SNDCUSTOMER_KEY)) AS TPC_,
(SUM(PRINCIPAL) / COUNT(TXN_ID)) AS PPT_ ,
(SUM(REV) / COUNT(TXN_ID)) AS RPT_ ,
(SUM(REV)/ COUNT(DISTINCT SNDCUSTOMER_KEY)) AS RPC_
FROM AJ_CAMPAIGN_MEASUREMENT_TXN_BUCKET

GROUP BY 1,2,3,4,5,6,7
ORDER BY 1,2,3,4,5,6,7;
---------------------------------------------------------------------------------------------MAIN CODE FOR EXECUTION--------------------------------------------------------------

----------------------------------------FINANCIAL METRICS DELIVERABLES-------------------------------------------------------------------------------------------------------------------------------------
SELECT SNDCOUNTRY_CODE,RCVCOUNTRY_CODE,PRICING_CHANNEL,FUNDS_IN,TEST_GH_CH,Retail_Digital_flag,Web_App_flag,REGISTERED_CUSTOMER_FLAG,DATE_TRUNC('MONTH',RECORD_DATETIME) AS TXN_MONTH,
COUNT(DISTINCT SNDCUSTOMER_KEY) AS TOTAL_CUSTOMERS,
COUNT(TXN_ID) AS TXN_COUNT, 
SUM(PRINCIPAL) AS TOTAL_PRINCIPAL,
SUM(FEE) AS TOTAL_FEE, 
SUM(NET_FX) AS TOTAL_NET_FX,
SUM(REV) AS TOTAL_REVENUE,
(TOTAL_PRINCIPAL/TOTAL_CUSTOMERS)  AS PPC ,
(TXN_COUNT/TOTAL_CUSTOMERS) AS TPC,
(SUM(REV) / COUNT(TXN_ID)) AS RPT_ ,
(TOTAL_REVENUE/TOTAL_CUSTOMERS) AS RPC
FROM AJ_CAMPAIGN_MEASUREMENT_TXN_BUCKET
--WHERE RECORD_DATETIME >= '2021-01-02' AND RECORD_DATETIME < '2021-08-01'
GROUP BY 1,2,3,4,5,6,7,8,9
ORDER BY 1,2,3,4,5,6,7,8,9;

SELECT * FROM AJ_CAMPAIGN_MEASUREMENT_TXN_BUCKET LIMIT 1000;

------------------------------------------------------CUST MEMBERSHIP & REDEMPTIONS---------------------------------------------------------------------------------------------------------------------------------------















